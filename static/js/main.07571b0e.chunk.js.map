{"version":3,"sources":["logo.svg","Components/TablaPropietarios.js","Components/List.js","Components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Lists","props","listas","lista","length","map","elem","react_default","a","createElement","className","concat","accion","TablaPropietario","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","character","cargando","event","_this2","preventDefault","Swal","fire","title","name","text","type","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","then","result","value","axios","delete","_id","response","position","showConfirmButton","timer","reload","catch","error","console","log","setState","me","get","data","_this3","columns","Header","accessor","Cell","key","original","onClick","e","verPersonaje","data-toggle","data-target","eliminarPersonaje","characters","infoCharacter","push","gender","alive","image","src","TablaPropietarios_Lists","allegiance","books","titles","id","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","class","es","defaultPageSize","minRows","previousText","nextText","loadingText","noDataText","pageText","ofText","rowsText","filterable","React","Component","List","nombre","apellido","email","errores","handler","bind","assertThisInitialized","mode","listCharacter","TablaPropietarios","Navbar","href","aria-controls","aria-expanded","App","Components_Navbar","Components_List","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07571b0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport Swal from 'sweetalert2'\nimport axios from 'axios'\nimport ReactTable from 'react-table'\nimport 'react-table/react-table.css'\n\nconst Lists = (props) => {\n        let listas = props.lista\n        //validando que el arreglo exista y este vacio o no\n        if (typeof listas !== 'undefined' && listas.length > 0) {\n            //the array is defined and has at least one element\n            return listas.map( elem => { return <li>{elem}</li>})\n        }else{\n            return (\n                <div className = \"alert alert-danger\">\n                   {`Sin ${props.accion}`}\n                </div>\n            )\n        }\n\n\n}\nclass TablaPropietario extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {character: '',cargando: false}\n    }\n    //acccion  para eliminar un usuario\n    eliminarPersonaje(character,event){\n        event.preventDefault();\n        \n        let props = this.props\n        Swal.fire({\n            title: `Está seguro de eliminar al personaje ${character.name}?`,\n            text: \"No podrá revertir esta acción!\",\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            cancelButtonText: 'cancelar',\n            confirmButtonText: 'Si, eliminar'\n          }).then((result,props) => {\n        \n            if (result.value) {\n         \n                axios.delete(`https://patricio-got-backend.herokuapp.com/characters/character/${character._id}`)\n                .then( (response) => {\n                \n                    Swal.fire({\n                        position: 'center',\n                        type: 'success',\n                        title: 'Personaje borrado exitosamente!',\n                        showConfirmButton: false,\n                        timer: 1500\n                    })\n                   //se recargar el padre para no tener que recargar la pagina\n                   this.props.reload()\n            \n                })\n                .catch(function (error) {\n                    console.log(error);\n                });\n                \n            }\n          })\n   \n         \n    }\n    verPersonaje(character,event){\n        \n        event.preventDefault();\n        this.setState({cargando:true})\n        let me = this\n        axios.get(`https://patricio-got-backend.herokuapp.com/characters/character/${character._id}`)\n        .then(function (response) {\n            \n            me.setState({\n                character: response.data.character[0],\n                cargando: false\n            })\n    \n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n       \n    }\n    render(){\n        const columns = [{\n            Header: 'Name',\n            accessor: 'name' // String-based value accessors!\n          }, {\n            Header: 'Culture',\n            accessor: 'slug',\n            Cell: props => <span className='number'>{props.value}</span> // Custom cell components!\n          },\n          {\n            Header: 'Acción',\n            Cell: props =>   \n            <div key ={props.original._id}>\n                <button onClick = { e =>  this.verPersonaje(props.original,e)}  type=\"button\" className=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#exampleModal\">\n                    <span className = \"fa fa-search-plus\"></span>\n                </button> \n                <button onClick = { e =>  this.eliminarPersonaje(props.original,e)}  className=\"btn btn-danger\">\n                    <span className = \"fa fa-times\"></span>\n                </button>\n            </div>    \n\n          }\n        ]\n        //console.log(\"las props que llegaron aca son: \",this.props)\n        let { characters } = this.props;\n\n        let character = this.state.character\n       \n        let infoCharacter = []\n        infoCharacter.push(\n            <div key={character._id}>\n                <div className = \"form-group\">\n                    <label>Nombre: <b>{character.name}</b></label>\n                </div>\n                <div className = \"form-group\">\n                    <label>Slug: <b>{character.name}</b></label>\n                </div>\n                <div className = \"form-group\">\n                    <label>Género: <b>{\n                        character.gender == \"male\"?\n                        <label>Masculino</label>\n                        :\n                        <label>Femenino</label>\n                        }</b></label>\n                </div>\n                <div className = \"form-group\">\n                    <label>Estado: <b>{\n                        character.alive?\n                            <label className = \"text-info\">Vivo</label>\n                        :\n                            <label className = \"text-danger\">Muerto</label>\n                        }</b></label>\n                </div>\n                <div className = \"form-group\">\n                    {character.image? \n                       <img src = {character.image} className=\"img-fluid img-thumbnail\"></img>\n                       :\n                       <div className = \"alert alert-danger\">Sin imagen para mostrar</div>\n                        }\n                </div>\n                <div className = \"form-group\">\n                    <label>Lealtad:</label>\n                    <Lists lista = {character.allegiance} accion = {\"lealtad\"}/>\n                </div>\n                <div className = \"form-group\">\n                    <label>Libros:</label>\n                    <Lists lista = {character.books} accion = {\"libros\"}/>\n                </div>\n                <div className = \"form-group\">\n                    <label>Títulos:</label>\n                    <Lists lista = {character.titles} accion = {\"títulos\"}/>\n                </div>\n            </div>\n            \n        )\n      \n        return(\n                <div className = \"card\">   \n                    \n                <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Ficha personaje</h5>\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        {this.state.cargando === true? \n                            <div class=\"fa-10x\">\n                                <i class=\"fas fa-sync fa-spin\"></i>\n                            </div>\n                        :\n                            infoCharacter}\n                    </div>\n                    <div className=\"modal-footer\">\n                        <button type=\"button\" className=\"btn btn-info\" data-dismiss=\"modal\">Cerrar</button>\n                    </div>\n             \n                    </div>\n                </div>\n                </div>\n                <ReactTable \n                    defaultPageSize={10}\n                    minRows={10}\n                    data = {characters} \n                    columns = {columns}  \n                    previousText =  {'Anterior'}\n                    nextText= {'Siguiente'}\n                    loadingText = {'Cargando...'}\n                    noDataText= {'No se encontraron filas'}\n                    pageText= {'Página'}\n                    ofText= {'de'}\n                    rowsText= {'filas'}\n                    filterable= {true}\n                />\n            </div>\n        )\n    }\n}   \n\nexport default TablaPropietario","import React from 'react'\nimport axios from 'axios';\nimport Swal from 'sweetalert2'\nimport TablaPropietarios from './TablaPropietarios'\n\nclass List extends React.Component {\n    constructor (props) {\n       super(props); \n       this.state = {\n           characters:[],\n           nombre: '',\n           apellido: '', \n           email: '', \n           errores: [],\n           cargando: false};\n        this.handler = this.handler.bind(this);\n\n    }\n\n    listCharacter(){\n        this.setState({cargando: true})\n        axios.get('https://patricio-got-backend.herokuapp.com/characters/character',{\n            mode: 'no-cors'\n        })\n        .then(response => {\n          //console.log(\"la response es: \",response.data);\n          this.setState({ \n              characters: response.data.characters,\n              cargando: false\n          });\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n    handler() {\n        //se recarga el padre\n        this.listCharacter();\n    }\n    componentDidMount() {\n        this.listCharacter();\n    }\n\n\n    render () {\n       \n        return(\n            <div>\n               <div className = \"row\">\n                    <div className = \"col\">\n                        {\n                            this.state.cargando?\n                            \n                            <div className=\"fa-10x\">\n                                <label>Cargando...</label>\n                                <i className=\"fas fa-sync fa-spin\"></i>\n                            </div>\n                            :\n                            <TablaPropietarios reload = {this.handler} characters = {this.state.characters}/>\n\n                        }\n                        \n                    </div>\n               </div>   \n            </div>\n    \n        )\n    \n    }\n  }\n\n\nexport default List","import React from 'react'\n//componente funcional\nconst Navbar = () =>(\n    \n    <div>\n        <nav className=\"navbar navbar-dark bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\">Prueba tecnica GOT</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n            <div className=\"navbar-nav\">\n            <a className=\"nav-item nav-link active\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n            <a className=\"nav-item nav-link\" href=\"#\">Features</a>\n            <a className=\"nav-item nav-link\" href=\"#\">Pricing</a>\n            <a className=\"nav-item nav-link disabled\" href=\"#\">Disabled</a>\n            </div>\n        </div>\n        </nav>\n    </div>\n)\n\nexport default Navbar","import React from 'react';\nimport List from './Components/List'\nimport Navbar from './Components/Navbar'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n\n    <div className=\"App\">\n      <Navbar/>\n      <br/>\n      <div className = \"container-fluid\">\n        <List />\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}